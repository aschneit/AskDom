{"version":3,"sources":["webpack:///webpack/bootstrap 322b545c3e381dfc3dc6","webpack:///./lib/demo.js","webpack:///./lib/main.js","webpack:///./lib/dom_node_collection.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DW;;;;AAIX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAAqC,GAAG;AACxC,GAAG;AACH;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA,+FAAqC,UAAU;AAC/C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA,mGAAyC,KAAK;AAC9C,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;;;;AAKH,CAAC;;;;;;;;;AClED;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;;AAGA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,oBAAoB;AACpB,kBAAkB;AAClB;AACA;AACA,WAAW;AACX,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;;;;;;;;AC3DA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,qBAAqB,kBAAkB;AACvC;AACA;AACA;;AAEA,mBAAmB,uBAAuB;AAC1C,qBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B;AAC7B,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,uBAAuB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,uBAAuB;AAC1C;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/ask_dom.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 322b545c3e381dfc3dc6","import {$l} from \"./main.js\";\n\n\n\n$l( () => {\n  const rootEl = $l('.beer');\n  const crit = [\"abv_gt\", \"abv_lt\", \"ibu_gt\", \"ibu_lt\", \"ebc_gt\",\n  \"ebc_lt\", \"beer_name\", \"yeast\", \"brewed_before\", \"brewed_after\",\n  \"hops\", \"malt\", \"food\"];\n  rootEl.append(\"<div class='title-image'></div>\");\n  $l('.title-image').append(\"<div class='beer-image'><img src='./beer.png'></img></div>\");\n  $l('.title-image').append(\"<div class='title'>Hop to It</div>\");\n  rootEl.append(\"<form class='form'>\");\n  crit.forEach(el => {\n    $l('.form').append(`<div class=${el}></div>`);\n  });\n  const labels = [\"Min ABV\", \"Max ABV\", \"Min IBU\", \"Max IBU\",\n  \"Min EBC\", \"Max EBC\", \"Beer Name\", \"Yeast\", \"Brewed Before (mm-yyyy)\",\n  \"Brewed After (mm-yyyy)\", \"Hops\", \"Malt\", \"Food Pairing\"];\n\n  for (let i = 0; i< labels.length; i++) {\n    let position = $l('.form').find('div').nodes;\n    $l(position[i]).append(`<label>${labels[i]}</label>`);\n  }\n\n  $l('.form').find('div').append(\"<input type='text'></input>\");\n  $l('.form').append(\"<input type='submit' value='search' class='search-button'></input>\");\n  rootEl.append(\"<ul class ='beer-list'>\");\n  let beerList = [];\n\n  $l('.form').on('submit', (e) =>{\n    e.preventDefault();\n    let dataVals = {};\n    $l('.form').find('div').nodes.forEach(node => {\n      let k = $l(node).attr(\"class\");\n      let v = $l(node).find('input').val();\n      v = v.split(\" \").join(\"_\");\n      if (v !== \"\") dataVals[k] = v;\n    });\n\n    $l.ajax({\n      type: 'GET',\n      data: dataVals,\n      url: \"https://api.punkapi.com/v2/beers\",\n      success(data) {\n        beerList = [];\n        const arr = JSON.parse(data);\n        $l('.beer-list').find('li').remove();\n        for (let i=0; i < arr.length; i++) {\n          beerList.push(arr[i].name);\n        }\n        beerList.forEach(beer =>{\n          $l('.beer-list').append(`<li>${beer}</li>`);\n        });\n        $l('.form').find(\"[type='text']\").val('');\n        console.log(data);\n      },\n      error() {\n        console.error(\"An error occurred.\");\n      },\n    });\n  });\n\n\n\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/demo.js\n// module id = 0\n// module chunks = 0","import DOMNodeCollection from './dom_node_collection.js';\n\nexport const $l = arg => {\n  let array;\n  if (typeof arg === \"object\" && arg instanceof HTMLElement) {\n    array = [arg];\n    return new DOMNodeCollection(array);\n  } else if (typeof arg === \"string\") {\n    array = Array.from(document.querySelectorAll(arg));\n    return new DOMNodeCollection(array);\n  } else if (typeof arg === \"function\") {\n    const queue = [];\n    queue.push(arg);\n    document.addEventListener('DOMContentLoaded', () => {\n      while (queue.length > 0) {\n        queue.shift()();\n      }\n    }\n  );}\n\n};\n\n\nwindow.$l = $l;\n\n$l.extend = (first, ...args) => {\n  args.forEach(arg => {\n    first = Object.assign(first, arg);\n  });\n  return first;\n};\n\n$l.ajax = (options) => {\n const defaults = {\n   success: () => {},\n   error: () => {},\n   url: \"\",\n   method: 'GET',\n   data: {},\n   contentType: 'application/x-www-form-urlencoded; charset=UTF-8'\n };\n  const req = $l.extend(defaults, options);\n  let baseUrl = new URL(req.url);\n  if (req.method === 'GET') {\n    Object.keys(req.data).forEach(key => baseUrl.searchParams.append(key, req.data[key]));\n  }\n  req.url = baseUrl.href;\n  console.log(req.url);\n  const xhr = new XMLHttpRequest();\n  xhr.open(req.method, req.url);\n  xhr.onload = () => {\n    if (xhr.status === 200) {\n     req.success(xhr.response);\n   } else {\n     req.error(xhr.response);\n   }\n  };\n  xhr.send(JSON.stringify(req.data));\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 1\n// module chunks = 0","class DOMNodeCollection {\n  constructor (nodes) {\n    this.nodes = nodes;\n  }\n\n  html(string) {\n    if (string){\n      for (let i = 0; i < this.nodes.length; i++) {\n        this.nodes[i].innerHTML = string;\n      }\n    }else{\n      return this.nodes[0].innerHTML;\n    }\n  }\n\n  empty(){\n    for (let i = 0; i < this.nodes.length; i++) {\n      this.nodes[i].innerHTML = \"\";\n    }\n  }\n\n  append(input){\n    let stringInput = [];\n    if (input.constructor.name === \"String\"){\n      stringInput = [input];\n    }else if (input instanceof HTMLElement){\n      stringInput = [input.outerHTML];\n    }else{\n      for (let k = 0; k < input.length; k++) {\n        stringInput[k].push(input[k].outerHTML);\n      }\n    }\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      for (let j = 0; j < stringInput.length; j++) {\n        this.nodes[i].innerHTML += stringInput[j];\n      }\n    }\n  }\n\n  val(value) {\n     if (typeof value === \"string\") {\n       this.nodes.forEach(node => {\n         node.value = value;});\n     } else {\n       return this.nodes[0].value;\n     }\n  }\n\n  attr(key, val) {\n     if (typeof val === \"string\") {\n       this.nodes.forEach(node => node.setAttribute(key, val));\n     } else {\n       return this.nodes[0].getAttribute(key);\n     }\n }\n\n\n   addClass(newClass) {\n     this.nodes.forEach(node => node.classList.add(newClass));\n   }\n\n   removeClass(oldClass) {\n     this.nodes.forEach(node => node.classList.remove(oldClass));\n }\n\n  children (){\n    let nodeChildren = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      nodeChildren = nodeChildren.concat(this.nodes[i].children);\n    }\n    return new DOMNodeCollection(nodeChildren);\n  }\n\n  parent (){\n    let nodeParents = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      nodeParents.push(this.nodes[i].parentNode);\n    }\n    return new DOMNodeCollection(nodeParents);\n  }\n\n  find (selector) {\n    let foundElements = [];\n    for (let i = 0; i < this.nodes.length; i++) {\n      foundElements = foundElements.concat(Array.from(this.nodes[i].querySelectorAll(selector)));\n    }\n    return new DOMNodeCollection(foundElements);\n  }\n\n  remove () {\n    for (let i = 0; i < this.nodes.length; i++) {\n      this.nodes[i].outerHTML = \"\";\n    }\n    this.nodes = [];\n  }\n\n  on (type, callback){\n\n    for (let i = 0; i < this.nodes.length; i++) {\n      this.nodes[i].addEventListener(type, callback);\n\n      if (!this.nodes[i][type + 'ing']){\n        this.nodes[i][type + 'ing'] = [];\n      }\n\n      this.nodes[i][type + 'ing'].push(callback);\n    }\n  }\n\n  off (type) {\n    for (let i = 0; i < this.nodes.length; i++) {\n      const callbacks = this.nodes[i][type + 'ing'];\n      for (let j = 0; j < callbacks.length; j++) {\n        this.nodes[i].removeEventListener(type, callbacks[j]);\n      }\n    }\n  }\n}\n\nexport default DOMNodeCollection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/dom_node_collection.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}